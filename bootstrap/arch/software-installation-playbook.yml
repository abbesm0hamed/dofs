---
- name: Install software on Arch Linux
  hosts: localhost
  become: yes

  tasks:
    - name: Clone i3ass repository from GitHub in user's home directory
      git:
        repo: https://github.com/budlabs/i3ass.git
        dest: "~/i3ass"
      become_user: "{{ ansible_user_id }}"

    - name: Navigate to the i3ass directory
      shell: cd ~/i3ass
      become_user: "{{ ansible_user_id }}"

    - name: Build i3ass using make
      shell: make
      args:
        chdir: "~/i3ass"
      become_user: "{{ ansible_user_id }}"

    - name: Install i3ass using make
      shell: make install
      args:
        chdir: "~/i3ass"
      become: yes

    # Install NVIDIA utils if you want
    # - name: Install NVIDIA utilities
    #   pacman:
    #     name: nvidia-settings
    #     state: present
    #   become: yes
    #   ignore_errors: yes

    # First install base packages with pacman
    - name: Install essential packages
      block:
        - name: Install essential base packages
          command: "pacman -S --noconfirm base-devel git"
          become: yes

        - name: Install remaining essential packages
          become_user: "{{ ansible_user_id }}"
          command: "yay -S --noconfirm {{ item }}"
          with_items:
            - zsh
            - nodejs
            - npm
            - python
            - rust
          ignore_errors: yes

    # switch user shell to zsh
    - name: Ensure zsh is installed
      ansible.builtin.pacman:
        name: zsh
        state: present

    - name: Get the current username
      ansible.builtin.command:
        cmd: whoami
      register: current_user

    - name: Change default shell to zsh for the current user
      ansible.builtin.user:
        name: "{{ current_user.stdout }}"
        shell: /usr/bin/zsh

    - name: Install development tools
      block:
        - name: Install development tools from official repositories
          become_user: "{{ ansible_user_id }}"
          command: "yay -S --noconfirm {{ item }}"
          with_items:
            - stow
            - neofetch
            - pokemon-colorscripts-git
            - python-pip
            - sqlite
            - yazi
            - pipes.sh
            - ranger
            # render images on terminal
            - imagemagick
            - python-ueberzug
            # - wezterm
            - tmux
            - gitmux
            - lazygit
            - lazydocker
            - nodejs-gitmoji-cli
            - fzf
            - ripgrep
            - docker
            - docker-compose
            - github-cli
            - bat
            - tldr
            - zoxide
            - lsd
            - neovim
            - luarocks
            # - alacritty
            - mpv
            - ncdu # ncdu / => check how disk is filled
            - pacman-contrib # to remove pacman cache => sudo paccache -rk3
            - keepassxc
            - btop
            - calibre
            - vlc
            - inkscape
            - udiskie # to automount usb
            - woeusb # windows bootable device creator on linux : sudo woeusb --device /Path/isofile /dev/sdx
            - balena-etcher # bootable usb drive creator
          ignore_errors: yes

    - name: Install AUR packages
      block:
        - name: Install AUR packages
          become_user: "{{ ansible_user_id }}"
          command: "yay -S --noconfirm {{ item }}"
          with_items:
            - paximer
            - networkmanager
            - sxhkd
            - autotiling
            - brave-bin
            - google-chrome
            - lxappearance
            - unrar
            - cava
            - fastfetch
            - tpm
            - tmuxifier
            # - nvm
            - fnm-bin # nvm alternative
            - brightnessctl
            - power-profiles-daemon
            - postman-bin
            - virtualbox
            - visual-studio-code-bin
            - the_silver_searcher
            - exa
            - fd
            - jq
            - xrandr
            - geoclue2
            - gparted
            - espanso-x11-git
            - conky
            - salawat-bin
            # - prayer-times
            - picom
            # - picom-jonaburg-git
            - picom-simpleanims-git
            # bluetooth libs
            - bluez
            - bluez-utils
            # audio libs
            - pulseaudio
            - pulseaudio-bluetooth
            - pavucontrol
            - xdg-utils
          ignore_errors: yes

    - name: Install fonts and appearance tools
      block:
        - name: Install fonts and appearance tools from official repositories
          become_user: "{{ ansible_user_id }}"
          command: "yay -S --noconfirm {{ item }}"
          with_items:
            # simplifying fonts
            # - nerd-fonts # whole fonts
            - ttf-jetbrains-mono-nerd
            - ttf-victormono-nerd
            - ttf-iosevka-nerd
            - ttf-font-awesome
            - ttf-material-design-iconic-font
            - ttf-feather
            - ttf-joypixels
            - rofi
            # - eww
            - polybar
            - feh
            # - variety
            - autorandr
            # - disper
            - arandr
            - flameshot
            - dunst
            - kvantum
            - gammastep
            - xcolor
          ignore_errors: yes

    - name: Install network and communication tools
      block:
        - name: Install network and communication tools from official repositories
          become_user: "{{ ansible_user_id }}"
          command: "yay -S --noconfirm {{ item }}"
          with_items:
            - discord
            - telegram-desktop
            - whatsapp-nativefier
            - slack-desktop
            - zoom
            - teams
            - anydesk
            - net-tools
          ignore_errors: yes

    - name: Install media and utility tools
      block:
        - name: Install media and utility tools from official repositories
          become_user: "{{ ansible_user_id }}"
          command: "yay -S --noconfirm {{ item }}"
          with_items:
            - gimp
            - cheese
            - audacity
            - ufw
            - ncmpcpp
            - clamav
            - xpad
          ignore_errors: yes

    - name: Enable Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Shell configuration and customization
      block:
        - name: Install zinit
          shell: |
            sh -c "$(curl -fsSL https://raw.githubusercontent.com/zdharma-continuum/zinit/master/scripts/install.sh)"
          args:
            creates: /home/{{ ansible_user_id }}/.zinit/bin/zinit.zsh
          become: false

        - name: Change default shell to Zsh
          command: "chsh -s /usr/bin/zsh"
          become_user: "{{ ansible_user_id }}"

        - name: Verify Zsh is the default shell
          command: "echo $SHELL"
          register: shell_check
          changed_when: "shell_check.stdout != '/usr/bin/zsh'"

        - name: Print message about Zsh default shell change
          debug:
            msg: "Please log out and log back in to use Zsh as your default shell."

        - name: Get the current username
          ansible.builtin.command:
            cmd: whoami
          register: current_user
          become: false

        - name: Create .tmux/plugins directory
          ansible.builtin.file:
            path: "/home/{{ current_user.stdout }}/.tmux/plugins"
            state: directory
            mode: "0755"
          become: false

        - name: Install TPM (Tmux Plugin Manager)
          git:
            repo: https://github.com/tmux-plugins/tpm
            dest: "/home/{{ current_user.stdout }}/.tmux/plugins/tpm"
            version: master
          become: false
