---
- name: Install software on Arch Linux
  hosts: localhost
  become: yes
  vars:
    yay_path: "/usr/local/bin/yay"
  tasks:
    - name: Ensure base-devel and other dependencies are installed
      pacman:
        name:
          - base-devel
          - git
          - nodejs
          - npm
          - zsh
        state: present

    - name: Clone Yay AUR helper
      git:
        repo: "https://aur.archlinux.org/yay.git"
        dest: "/tmp/yay"
        clone: yes
      register: yay_clone

    - name: Build and install Yay as non-root user
      command: "makepkg -si --noconfirm"
      args:
        chdir: "/tmp/yay"
      become: false
      become_user: "{{ ansible_user_id }}"
      when: yay_clone.changed

    - name: Move yay to /usr/local/bin
      command: "mv /tmp/yay/yay /usr/local/bin/yay"
      become: yes
      when: yay_clone.changed

    - name: Ensure yay is executable
      file:
        path: "{{ yay_path }}"
        mode: '0755'
        state: file
      become: yes

    - name: Debug yay path
      debug:
        msg: "yay path is {{ yay_path }}"

    - name: Debug yay binary
      command: "{{ yay_path }} --version"
      register: yay_version_output
      changed_when: false
      ignore_errors: true

    - name: Print yay version
      debug:
        msg: "yay version: {{ yay_version_output.stdout }}"

    - name: Install packages from official repositories
      pacman:
        name:
          - stow
          - wezterm
          - neofetch
          - tmux
          - nodejs
          - npm
          - nerd-fonts
          - fzf
          - ripgrep
          - lazygit
          - zsh
          - rofi
          - polybar
          - feh
          - docker
          - flameshot
          - github-cli
          - bat
          - tldr
          - zoxide
          - lsd
          - dunst
          - sxhkd
          - ranger
          - neovim
          - alacritty
          - xcolor
          - mpv
          - gimp
          - cheese
          - audacity
          - discord
          - btop
          - ncdu
          - libreoffice-fresh
          - keepassxc
          - calibre
          - vlc
          - inkscape
          - blender
          - ufw
          - clamav
          # - firefox
          # - chromium
          - redshift
          - kvantum
        state: present

    - name: Install packages from AUR using Yay
      command: "{{ yay_path }} -S --noconfirm {{ item }}"
      with_items:
        - brave-bin
        - tpm
        - tmuxifier
        - nvm
        - espanso
        - conky
        - picom-jonaburg-git
        - anydesk
        - meshvibes
        - autotiling
        - slack-desktop
        - telegram-desktop
        - whatsapp-nativefier
        - virtualbox
        - code-bin
        - postman-bin
        - zoom
        - teams
        - the_silver_searcher
        - exa
        - fd

    - name: Install Docker Compose
      command: "sudo pacman -S docker-compose --noconfirm"

    - name: Enable Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Install zinit
      shell: |
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/zdharma-continuum/zinit/master/scripts/install.sh)"
      args:
        creates: /home/{{ ansible_user_id }}/.zinit/bin/zinit.zsh
      become: false

    - name: Change default shell to Zsh
      command: "chsh -s /usr/bin/zsh"
      become_user: "{{ ansible_user_id }}"

    - name: Verify Zsh is the default shell
      command: "echo $SHELL"
      register: shell_check
      changed_when: "shell_check.stdout != '/usr/bin/zsh'"

    - name: Print message about Zsh default shell change
      debug:
        msg: "Please log out and log back in to use Zsh as your default shell."

    - name: Install TPM (Tmux Plugin Manager)
      git:
        repo: https://github.com/tmux-plugins/tpm
        dest: /home/{{ ansible_user_id }}/.tmux/plugins/tpm
        version: master
      become: false

    - name: Install nitch
      shell: |
        wget https://raw.githubusercontent.com/unxsh/nitch/main/setup.sh
        sh setup.sh
      args:
        creates: /usr/local/bin/nitch
      become: false

    - name: Cleanup Yay build files
      file:
        path: "/tmp/yay"
        state: absent
        force: yes

